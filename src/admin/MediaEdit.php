<?php
/*
    This file is part of RIU - Responsive Image Uploader.

    RIU is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    RIU is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
 */

namespace riu;

/**
 * Add post/media widgets
 */
function adminEditForm() {
	$screenInfo = get_current_screen();
	if ($screenInfo->id=='attachment') {
		include "page/adminMediaEdit.php";
	}
}

add_action( 'edit_form_after_title', 'riu\adminEditForm' );

/**
 * Add attachment meta
 */
function setAttachmentFields( $form_fields, $post ) {
	$field_value = get_post_meta( $post->ID, 'riuMeta', true );
	$form_fields['riuMeta'] = array(
		'value' => $field_value ? $field_value : '',
		'input' => 'hidden',
	);
	return $form_fields;
}
add_filter( 'attachment_fields_to_edit', 'riu\setAttachmentFields', 10, 2 );

//update metadata with type and params and process image
function editAttachment( $attachment_id ) {
	if ( isset( $_REQUEST['attachments'][$attachment_id]['riuMeta'] ) ) {
		$meta = $_REQUEST['attachments'][$attachment_id]['riuMeta'];
		processAttachment($attachment_id, $meta);
	}
}

add_action( 'edit_attachment', 'riu\editAttachment' );

/**
 * Insert responsive image in post
 */
function mediaSendToEditor($html, $send_id, $attachment) {

	$riu = get_post_meta( $attachment['id'], 'riuMeta', false );
	if ($riu) {
		$riu = json_decode(stripslashes( $riu[0] ),true);
		if ($riu && isset($riu['enabled']) && $riu['enabled'] == true) {
			return "[riu attachment='{$attachment['id']}']";
		}
	}

	return $html;
}

add_filter('media_send_to_editor', 'riu\mediaSendToEditor', 20, 3);

/**
 * Delete images generated by RIU for different device types
 */
function deleteAttachment($postid) {
	try {
		$riuMeta = get_post_meta( $postid, 'riuMeta', true );
		if ( $riuMeta ) {
			$meta = json_decode( stripslashes( $riuMeta ), true );
			if ( isset( $meta['images'] ) )
				foreach ( $meta['images'] as $image )
					if ( file_exists( $image['local'] ) )
						unlink( $image['local'] );
		}
	} catch (\Exception $e) {
		throw $e;
	}
	return true;
}

add_action('delete_attachment', 'riu\deleteAttachment');

